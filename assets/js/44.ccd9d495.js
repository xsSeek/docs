(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{367:function(t,s,a){"use strict";a.r(s);var n=a(3),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"vue-面试题"}},[t._v("vue 面试题")]),t._v(" "),s("h2",{attrs:{id:"什么是-mvvm"}},[t._v("什么是 MVVM")]),t._v(" "),s("img",{staticClass:"zoom-imgs",attrs:{src:"https://github.com/scott8013/readme-images/blob/main/WX20210324-203950@2x.png?raw=true",alt:"mvvm"}}),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("MVVM是Model-View-ViewModel的缩写。前端开发的架构模式")]),t._v(" "),s("p",[t._v("M：模型，对应的就是data的数据")]),t._v(" "),s("p",[t._v("V：视图，用户界面，DOM")]),t._v(" "),s("p",[t._v("VM：视图模型：Vue的实例对象，连接View和Model的桥梁\nMVVM的核心是提供对View和ViewModel的双向数据绑定，当数据改变的时候，ViewModel能监听到数据的变化，自动更新视图，\n当用户操作视图的时候，ViewModel也可以监听到视图的变化，然后通知数据进行改动，这就实现了双向数据绑定\nViewModel通过双向绑定把View和Model连接起来，他们之间的同步是自动的，不需要认为干涉，所以我们只需要关注业务逻辑即可，不需要操作DOM，同时也不需要关注数据的状态问题，因为她是由MVVM统一管理")])]),t._v(" "),s("h2",{attrs:{id:"v-for中的key值的作用是什么"}},[t._v("v-for中的key值的作用是什么？")]),t._v(" "),s("blockquote",[s("p",[t._v("key属性是DOM元素的唯一标识\n作用：")])]),t._v(" "),s("ul",[s("li",[t._v("1.提高虚拟DOM的更新效率")]),t._v(" "),s("li",[t._v("2.若不设置key，可能会触发一些bug")]),t._v(" "),s("li",[t._v("3.为了触发过度效果")])]),t._v(" "),s("h2",{attrs:{id:"说一下你对vue生命周期的理解。"}},[t._v("说一下你对vue生命周期的理解。")]),t._v(" "),s("blockquote",[s("p",[t._v("组件从创建到销毁的过程就是它的生命周期")])]),t._v(" "),s("p",[t._v("1.创建")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("a.beforeCreat\n时机：组件实例刚创建，但数据观测 (data) 和事件配置 (methods) 未初始化。\n用途：常用于插件初始化（如 Vuex 或路由的初始化）")]),t._v(" "),s("p",[t._v("b.created\n时机：props, 数据观测 (data)、计算属性 (computed)、方法 (methods) 已初始化，但 DOM 未生成。\n用途：发起异步请求（如 API 调用）、初始化非 DOM 相关数据。")])]),t._v(" "),s("p",[t._v("2.挂载")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("a.beforeMount\n时机：模板编译完成，但尚未将组件挂载到 DOM。\n用途：极少使用，一般用于服务端渲染\nb.Mounted\n时机：组件已挂载到 DOM 上，可以访问 this.$el\n用途：操作 DOM（如绑定第三方库）、发起依赖 DOM 的请求")])]),t._v(" "),s("p",[t._v("3.更新")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("beforeUpdate\n时机：数据变化后，DOM 重新渲染前。")]),t._v(" "),s("p",[t._v("用途：获取更新前的 DOM 状态。\nupdated\n时机：DOM 已更新完成。")]),t._v(" "),s("p",[t._v("用途：执行依赖更新后 DOM 的操作，需避免在此修改数据（可能导致无限循环）。")])]),t._v(" "),s("p",[t._v("4.销毁")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("beforeDestroy\n时机：组件销毁前，实例仍可用。")]),t._v(" "),s("p",[t._v("用途：清除定时器、取消事件监听、销毁第三方库实例。\ndestroyed\n时机：组件已销毁，所有子实例和事件监听被移除。")]),t._v(" "),s("p",[t._v("用途：执行最后的清理操作。")])]),t._v(" "),s("p",[t._v("5.使用了keep-alive时多出两个周期：\nactivited\n组件激活时\ndeactivited")]),t._v(" "),s("h2",{attrs:{id:"在created和mounted去请求数据-有什么区别"}},[t._v("在created和mounted去请求数据，有什么区别？")]),t._v(" "),s("h3",{attrs:{id:"_1-触发时机"}},[t._v("1. "),s("strong",[t._v("触发时机")])]),t._v(" "),s("ul",[s("li",[s("strong",[s("code",[t._v("created")])]),t._v("："),s("br"),t._v("\n在组件实例创建完成后调用，此时数据观测 ("),s("code",[t._v("data")]),t._v(")、计算属性、方法等已初始化，"),s("strong",[t._v("但 DOM 还未生成")]),t._v("（"),s("code",[t._v("this.$el")]),t._v(" 不可用）。")]),t._v(" "),s("li",[s("strong",[s("code",[t._v("mounted")])]),t._v("："),s("br"),t._v("\n在组件首次渲染并挂载到 DOM 后调用，此时可以访问 DOM 元素（"),s("code",[t._v("this.$el")]),t._v(" 可用）。")])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_2-数据请求的适用场景"}},[t._v("2. "),s("strong",[t._v("数据请求的适用场景")])]),t._v(" "),s("h4",{attrs:{id:"在-created-中请求数据"}},[s("strong",[t._v("在 "),s("code",[t._v("created")]),t._v(" 中请求数据")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("优势")]),t._v("："),s("br"),t._v("\n可以更早发起异步请求，减少用户等待时间（尤其当数据获取和模板渲染不依赖 DOM 时）。")]),t._v(" "),s("li",[s("strong",[t._v("适用场景")]),t._v("：\n"),s("ul",[s("li",[t._v("数据不依赖 DOM，仅用于填充模板。")]),t._v(" "),s("li",[t._v("需要服务端渲染（SSR）时，"),s("code",[t._v("created")]),t._v(" 会在服务端执行，而 "),s("code",[t._v("mounted")]),t._v(" 不会。")]),t._v(" "),s("li",[t._v("父组件需在子组件挂载前传递数据。")])])])]),t._v(" "),s("h4",{attrs:{id:"在-mounted-中请求数据"}},[s("strong",[t._v("在 "),s("code",[t._v("mounted")]),t._v(" 中请求数据")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("优势")]),t._v("："),s("br"),t._v("\n可以操作 DOM，例如初始化第三方库（如地图、图表）。")]),t._v(" "),s("li",[s("strong",[t._v("适用场景")]),t._v("：\n"),s("ul",[s("li",[t._v("数据返回后需要直接操作 DOM。")]),t._v(" "),s("li",[t._v("需要确保子组件已挂载，再基于 DOM 布局请求数据（如获取元素尺寸）。")])])])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_3-用户体验差异"}},[t._v("3. "),s("strong",[t._v("用户体验差异")])]),t._v(" "),s("ul",[s("li",[s("strong",[s("code",[t._v("created")]),t._v(" 请求")]),t._v("："),s("br"),t._v("\n数据返回后触发重新渲染，用户可能看到内容从“初始状态”到“数据填充”的变化。")]),t._v(" "),s("li",[s("strong",[s("code",[t._v("mounted")]),t._v(" 请求")]),t._v("："),s("br"),t._v("\n用户可能先看到初始渲染内容（如骨架屏），稍后看到数据更新。")])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_4-服务端渲染-ssr-注意事项"}},[t._v("4. "),s("strong",[t._v("服务端渲染 (SSR) 注意事项")])]),t._v(" "),s("ul",[s("li",[s("strong",[s("code",[t._v("created")])]),t._v("："),s("br"),t._v("\n在服务端和客户端均会执行，需确保请求代码兼容 Node.js 环境（如使用 "),s("code",[t._v("axios")]),t._v("）。")]),t._v(" "),s("li",[s("strong",[s("code",[t._v("mounted")])]),t._v("："),s("br"),t._v("\n仅在客户端执行，无法用于服务端预取数据。")])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_5-代码示例"}},[t._v("5. "),s("strong",[t._v("代码示例")])]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在 created 中请求（不依赖 DOM）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("created")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetchData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更早发起请求")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("methods")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetchData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" api"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/data'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("items "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在 mounted 中请求（依赖 DOM）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mounted")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("initChart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 需要 DOM 存在")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetchData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("methods")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("initChart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("chart "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Chart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$refs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("canvas"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetchData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" api"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/chart-data'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("chart"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br")])]),s("hr"),t._v(" "),s("h3",{attrs:{id:"总结"}},[s("strong",[t._v("总结")])]),t._v(" "),s("ul",[s("li",[t._v("优先使用 "),s("strong",[s("code",[t._v("created")])]),t._v("："),s("br"),t._v("\n数据不依赖 DOM，需更快发起请求或支持 SSR。")]),t._v(" "),s("li",[t._v("使用 "),s("strong",[s("code",[t._v("mounted")])]),t._v("："),s("br"),t._v("\n需要操作 DOM 或等待子组件挂载。")]),t._v(" "),s("li",[s("strong",[t._v("关键考量")]),t._v("：是否需要访问 DOM、服务端渲染兼容性、用户体验优化（如避免内容闪烁）。")])]),t._v(" "),s("h2",{attrs:{id:"vue中的修饰符有哪些"}},[t._v("vue中的修饰符有哪些？")]),t._v(" "),s("h3",{attrs:{id:"_1-事件修饰符"}},[t._v("1.事件修饰符")]),t._v(" "),s("p",[t._v(".stop 组织冒泡\n.prevent 组织默认行为\n.capture 即是给元素添加一个监听器，当元素发生冒泡时，先触发带有该修饰符的元素。若有多个该修饰符，则由外而内触发。\n就是谁有该事件修饰符，就先触发谁\n.self 只有在event.target是当前元素时触发\n.once 事件只会触发一次\n.passive 立即触发默认行为\n.native 把当前元素作为原生标签看待")]),t._v(" "),s("h3",{attrs:{id:"_2-按键修饰符"}},[t._v("2.按键修饰符")]),t._v(" "),s("p",[t._v(".enter\n.tab\n.delete\n.esc\n.space\n.up\n.down\n.left\n.right\n.keyup 键盘抬起\n.keydown 键盘按下")]),t._v(" "),s("h3",{attrs:{id:"_3-系统修饰符"}},[t._v("3.系统修饰符")]),t._v(" "),s("p",[t._v(".ctrl\n.shift\n.alt\n.meta")]),t._v(" "),s("h3",{attrs:{id:"_4-鼠标修饰符"}},[t._v("4.鼠标修饰符")]),t._v(" "),s("p",[t._v(".left 鼠标左键\n.right 鼠标右键\n.middle 鼠标中键")]),t._v(" "),s("h3",{attrs:{id:"_5-表单修饰符"}},[t._v("5.表单修饰符")]),t._v(" "),s("p",[t._v(".lazy 等输入完之后再显示\n.trim 删除内容前后的空格\n.number 输入是数字或转为数字")]),t._v(" "),s("h3",{attrs:{id:"elementui是怎么做表单验证的"}},[t._v("elementui是怎么做表单验证的")]),t._v(" "),s("p",[t._v("1.在表单中加rules属性，然后再data里写校验规则\n2.内部添加规则\n3.自定义函数校验")]),t._v(" "),s("h3",{attrs:{id:"vue如何进行组件通信"}},[t._v("vue如何进行组件通信")]),t._v(" "),s("ul",[s("li",[t._v("01.父到子\n:::\n"),s("ul",[s("li",[t._v("01.props")]),t._v(" "),s("li",[t._v("02.父组建默认暴露(defineExpose)方法，父通过模板引用获取子组建实例, 调用子组建暴露方法，并传参\n:::")])])]),t._v(" "),s("li",[t._v("02.子到父"),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("ul",[s("li",[t._v("01.父自定义事件，子emit触发自定义事件，并传参给父组建")]),t._v(" "),s("li",[t._v("02.把函数作为属性传给子组建，在子调用函数并传参数")]),t._v(" "),s("li",[t._v("03.作用域插槽 子："),s("code",[t._v('<slot :obj="obj" :age="age"></slot>')]),t._v(" 父： "),s("code",[t._v('<template #default="{obj, age}"></template>')])]),t._v(" "),s("li",[t._v("03.1作用域插槽 子："),s("code",[t._v('<slot name="slot1" :obj="obj" :age="age"></slot>')]),t._v(" 父：\n"),s("code",[t._v('<template v-slot:slot1="{obj, age}"></template>')])])])])]),t._v(" "),s("li",[t._v(":::")]),t._v(" "),s("li",[t._v("03.兄弟\nmitt")]),t._v(" "),s("li",[t._v("04.祖孙\nprovide, inject")])]),t._v(" "),s("p",[t._v("useAttrs($attrs)")]),t._v(" "),s("p",[t._v("v-modal + defineModal\npinia")]),t._v(" "),s("h2",{attrs:{id:"keep-alive是什么-怎么使用"}},[t._v("keep-alive是什么 怎么使用")]),t._v(" "),s("p",[t._v("Vue的一个内置组件，包裹组件的时候，会缓存不活跃的组件实例，并不是销毁他们")]),t._v(" "),s("p",[t._v("作用：把组件切换的状态保存在内存里，防止重复渲染DOM节点，减少加载时间和性能消耗，提高用户体验")]),t._v(" "),s("h3",{attrs:{id:"keep-alive-原理"}},[t._v("keep-alive 原理")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"一、缓存机制"}},[t._v("一、缓存机制")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("缓存对象")]),s("br"),t._v(" "),s("code",[t._v("keep-alive")]),t._v(" 内部维护一个 "),s("code",[t._v("cache")]),t._v(" 对象（存储 VNode）和 "),s("code",[t._v("keys")]),t._v(" 数组（记录缓存组件的 key）。结构类似：")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cache "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" keys "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("命中缓存")]),s("br"),t._v("\n当组件切换时，"),s("code",[t._v("keep-alive")]),t._v(" 根据组件的 "),s("code",[t._v("name")]),t._v(" 或匿名组件的特殊标识，检查 "),s("code",[t._v("cache")]),t._v(" 中是否存在匹配的 VNode：")])])]),t._v(" "),s("ul",[s("li",[t._v("命中缓存：直接复用缓存的组件实例。")]),t._v(" "),s("li",[t._v("未命中：创建新实例并缓存。")])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"二、lru-缓存策略"}},[t._v("二、LRU 缓存策略")]),t._v(" "),s("p",[t._v("若设置了 "),s("code",[t._v("max")]),t._v(" 属性（如 "),s("code",[t._v('<keep-alive max="5">')]),t._v("），当缓存数量超过 "),s("code",[t._v("max")]),t._v(" 时，采用 "),s("strong",[t._v("LRU（Least Recently Used）")]),t._v(" 策略淘汰最久未使用的组件：")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 伪代码：淘汰逻辑")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" keys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" max"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oldestKey "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" keys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("shift")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 移除最久未使用的 key")]),t._v("\n    cache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldestKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除对应缓存")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("hr"),t._v(" "),s("h3",{attrs:{id:"三、生命周期管理"}},[t._v("三、生命周期管理")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("激活/停用钩子")]),s("br"),t._v("\n被缓存的组件会触发特有生命周期：")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("activated")]),t._v("：组件被激活（插入 DOM 时调用）。")]),t._v(" "),s("li",[s("code",[t._v("deactivated")]),t._v("：组件被停用（移除 DOM 但未销毁时调用）。")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[s("strong",[t._v("避免销毁")]),s("br"),t._v("\n缓存的组件不会触发 "),s("code",[t._v("beforeDestroy")]),t._v(" 和 "),s("code",[t._v("destroyed")]),t._v(" 钩子，而是通过 "),s("code",[t._v("deactivated")]),t._v(" 暂停运行。")])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"四、实现原理-源码简析"}},[t._v("四、实现原理（源码简析）")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[s("code",[t._v("render")]),t._v(" 函数逻辑")]),s("br"),t._v(" "),s("code",[t._v("keep-alive")]),t._v(" 的 "),s("code",[t._v("render")]),t._v(" 函数优先返回缓存中的 VNode：")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" slot "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$slots"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("default"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" vnode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" slot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取包裹的组件 VNode")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vnode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("??")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getComponentKey")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vnode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("has")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    vnode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("componentInstance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("componentInstance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 复用实例")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调整 key 顺序（LRU）")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    cache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vnode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    keys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" vnode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("include")]),t._v(" 与 "),s("code",[t._v("exclude")])]),s("br"),t._v("\n通过 "),s("code",[t._v("include")]),t._v(" 和 "),s("code",[t._v("exclude")]),t._v(" 属性匹配组件 "),s("code",[t._v("name")]),t._v("，决定是否缓存：")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getComponentName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vnode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("componentOptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("include "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("matches")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("include"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exclude "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("matches")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exclude"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" vnode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不缓存")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])])])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"五、使用注意事项"}},[t._v("五、使用注意事项")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("必须设置 "),s("code",[t._v("name")])]),t._v("：匿名组件或未显式声明 "),s("code",[t._v("name")]),t._v(" 的组件无法被 "),s("code",[t._v("include/exclude")]),t._v(" 正确匹配。")]),t._v(" "),s("li",[s("strong",[t._v("避免内存泄漏")]),t._v("：缓存大量组件可能占用内存，需合理设置 "),s("code",[t._v("max")]),t._v("。")]),t._v(" "),s("li",[s("strong",[t._v("动态组件优化")]),t._v("：适合缓存需要保持状态的复杂组件（如表单、选项卡）。")])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"总结-2"}},[t._v("总结")]),t._v(" "),s("p",[s("code",[t._v("keep-alive")]),t._v(" 通过 "),s("strong",[t._v("缓存 VNode + LRU 淘汰策略")]),t._v("，结合 Vue 的组件生命周期管理，实现了无状态损耗的组件持久化。这种设计在保留组件状态的同时，显著提升了高频切换场景下的性能表现。")]),t._v(" "),s("h2",{attrs:{id:"axios是怎么做封装的"}},[t._v("axios是怎么做封装的")]),t._v(" "),s("p",[t._v("下载 创建实例 接着封装请求响应拦截器  抛出 最后封装接口")]),t._v(" "),s("h3",{attrs:{id:"vue-的双向绑定原理"}},[t._v("Vue 的双向绑定原理")]),t._v(" "),s("blockquote",[s("p",[t._v("主要基于 "),s("strong",[t._v("数据劫持")]),t._v(" 和 "),s("strong",[t._v("发布-订阅模式")]),t._v("，通过以下核心机制实现：")])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_1-数据劫持-响应式系统"}},[t._v("1. "),s("strong",[t._v("数据劫持（响应式系统）")])]),t._v(" "),s("p",[t._v("Vue 通过劫持数据的读写操作，监听数据变化：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Vue2 使用 "),s("code",[t._v("Object.defineProperty")])]),t._v("：\n"),s("ul",[s("li",[t._v("遍历 "),s("code",[t._v("data")]),t._v(" 对象的属性，将其转换为 "),s("code",[t._v("getter/setter")]),t._v("。")]),t._v(" "),s("li",[s("strong",[t._v("局限性")]),t._v("：无法直接监听新增属性和数组索引变化，需通过 "),s("code",[t._v("Vue.set")]),t._v(" 或数组变异方法（如 "),s("code",[t._v("push")]),t._v("、"),s("code",[t._v("pop")]),t._v("）触发更新。")])])]),t._v(" "),s("li",[s("strong",[t._v("Vue3 使用 "),s("code",[t._v("Proxy")])]),t._v("：\n"),s("ul",[s("li",[t._v("直接代理整个对象，支持监听属性的增删、数组索引变化和 "),s("code",[t._v("length")]),t._v(" 修改。")]),t._v(" "),s("li",[t._v("性能更优，无需递归初始化所有属性。")])])])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_2-依赖收集与发布-订阅"}},[t._v("2. "),s("strong",[t._v("依赖收集与发布-订阅")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Dep（依赖管理器）")]),t._v("：\n"),s("ul",[s("li",[t._v("每个响应式属性对应一个 "),s("code",[t._v("Dep")]),t._v(" 实例，用于存储依赖它的 "),s("code",[t._v("Watcher")]),t._v("。")])])]),t._v(" "),s("li",[s("strong",[t._v("Watcher（订阅者）")]),t._v("：\n"),s("ul",[s("li",[t._v("在组件渲染、计算属性或监听器中被创建。")]),t._v(" "),s("li",[t._v("在初始化时触发 "),s("code",[t._v("getter")]),t._v("，将自身添加到当前属性的 "),s("code",[t._v("Dep")]),t._v(" 中（依赖收集）。")])])]),t._v(" "),s("li",[s("strong",[t._v("更新流程")]),t._v("：\n"),s("ul",[s("li",[t._v("数据变化时，"),s("code",[t._v("setter")]),t._v(" 或 "),s("code",[t._v("Proxy")]),t._v(" 触发 "),s("code",[t._v("Dep")]),t._v(" 通知所有 "),s("code",[t._v("Watcher")]),t._v("。")]),t._v(" "),s("li",[s("code",[t._v("Watcher")]),t._v(" 将更新任务推入异步队列，等待批量执行（避免重复渲染）。")])])])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_3-异步批量更新"}},[t._v("3. "),s("strong",[t._v("异步批量更新")])]),t._v(" "),s("ul",[s("li",[t._v("同一事件循环内的多次数据变更合并为一次更新。")]),t._v(" "),s("li",[t._v("通过 "),s("code",[t._v("nextTick")]),t._v(" 实现延迟执行，优先使用 "),s("code",[t._v("Promise.then")]),t._v("、"),s("code",[t._v("MutationObserver")]),t._v(" 等微任务机制。")])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_4-模板编译与虚拟-dom"}},[t._v("4. "),s("strong",[t._v("模板编译与虚拟 DOM")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("模板编译")]),t._v("：\n"),s("ul",[s("li",[t._v("将模板转换为渲染函数，渲染函数执行时访问数据属性，触发依赖收集。")])])]),t._v(" "),s("li",[s("strong",[t._v("虚拟 DOM")]),t._v("：\n"),s("ul",[s("li",[t._v("数据变化后，重新生成虚拟 DOM，通过 "),s("strong",[t._v("Diff 算法")]),t._v(" 对比新旧节点，最小化 DOM 操作。")])])])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_5-双向绑定的实现-v-model"}},[t._v("5. "),s("strong",[t._v("双向绑定的实现（v-model）")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("语法糖")]),t._v("："),s("code",[t._v("v-model")]),t._v(" 自动绑定 "),s("code",[t._v("value")]),t._v(" 属性和 "),s("code",[t._v("input")]),t._v(" 事件。"),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-model")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 等价于 --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("@input")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("message = $event.target.value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])])]),t._v(" "),s("li",[s("strong",[t._v("自定义组件")]),t._v("：可通过 "),s("code",[t._v("model")]),t._v(" 选项配置绑定的属性和事件。")])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_6-数组的响应式处理-vue2"}},[t._v("6. "),s("strong",[t._v("数组的响应式处理（Vue2）")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("重写数组方法")]),t._v("：对 "),s("code",[t._v("push")]),t._v("、"),s("code",[t._v("pop")]),t._v("、"),s("code",[t._v("splice")]),t._v(" 等 7 个方法进行重写，调用时手动触发更新。")]),t._v(" "),s("li",[s("strong",[t._v("递归监听数组元素")]),t._v("：若数组元素是对象，仍会进行响应式转换。")])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"总结-3"}},[t._v("总结")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Vue2")]),t._v("："),s("code",[t._v("Object.defineProperty")]),t._v(" + 发布订阅 + 虚拟 DOM。")]),t._v(" "),s("li",[s("strong",[t._v("Vue3")]),t._v("："),s("code",[t._v("Proxy")]),t._v(" + 重构的响应式系统 + 优化虚拟 DOM。")]),t._v(" "),s("li",[s("strong",[t._v("核心流程")]),t._v("："),s("br"),t._v(" "),s("strong",[t._v("数据变更 → 触发 setter/Proxy → 通知 Watcher → 异步更新 → 虚拟 DOM 对比 → 渲染视图")]),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"vue-js-的-diff-算法"}},[t._v("Vue.js 的 diff 算法")]),t._v(" "),s("blockquote",[s("p",[t._v("diff 算法是虚拟 DOM（Virtual DOM）更新的核心机制，用于高效地更新真实 DOM。Vue 2.x 和 Vue 3.x 在 diff 算法上有一些差异，但核心思想相似。以下是 Vue 的 diff 算法的主要思路和优化策略")])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_1-diff-算法的核心思想"}},[t._v("1. "),s("strong",[t._v("Diff 算法的核心思想")])]),t._v(" "),s("p",[t._v("Diff 算法通过比较新旧虚拟 DOM 树，找出最小的变化，然后只更新真实 DOM 中需要变化的部分，而不是重新渲染整个 DOM 树。这样可以大幅提升性能。")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_2-diff-算法的优化策略"}},[t._v("2. "),s("strong",[t._v("Diff 算法的优化策略")])]),t._v(" "),s("p",[t._v("Vue 的 diff 算法采用了一些优化策略，以减少比较的复杂度：")]),t._v(" "),s("h4",{attrs:{id:"_1-同层比较"}},[t._v("（1）"),s("strong",[t._v("同层比较")])]),t._v(" "),s("p",[t._v("Vue 的 diff 算法只会比较同一层级的节点，而不会跨层级比较。如果发现节点在不同层级，则会直接销毁旧节点并创建新节点。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("优点")]),t._v("：减少了比较的复杂度，算法时间复杂度从 O(n^3) 降低到 O(n)。")]),t._v(" "),s("li",[s("strong",[t._v("示例")]),t._v("："),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 旧节点 --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Hello"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 新节点 --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Hi"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),t._v("在这种情况下，"),s("code",[t._v("<p>")]),t._v(" 和 "),s("code",[t._v("<span>")]),t._v(" 是同一层级的节点，Vue 会直接替换 "),s("code",[t._v("<p>")]),t._v(" 为 "),s("code",[t._v("<span>")]),t._v("。")])]),t._v(" "),s("h4",{attrs:{id:"_2-key-的作用"}},[t._v("（2）"),s("strong",[t._v("Key 的作用")])]),t._v(" "),s("p",[t._v("Vue 通过 "),s("code",[t._v("key")]),t._v(" 属性来标识节点的唯一性。在列表渲染时，"),s("code",[t._v("key")]),t._v(" 可以帮助 Vue 更高效地复用节点。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("没有 key")]),t._v("：Vue 会采用“就地复用”策略，可能会导致状态错乱。")]),t._v(" "),s("li",[s("strong",[t._v("有 key")]),t._v("：Vue 会根据 key 的值来匹配新旧节点，确保节点的正确复用。")]),t._v(" "),s("li",[s("strong",[t._v("示例")]),t._v("："),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ul")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-for")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("item in items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":key")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("item.id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{ item.text }}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ul")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),t._v("如果 "),s("code",[t._v("items")]),t._v(" 的顺序发生变化，Vue 会根据 "),s("code",[t._v("key")]),t._v(" 来重新排序节点，而不是销毁和重新创建。")])]),t._v(" "),s("h4",{attrs:{id:"_3-双端比较"}},[t._v("（3）"),s("strong",[t._v("双端比较")])]),t._v(" "),s("p",[t._v("Vue 2.x 的 diff 算法采用双端比较（双指针法），即同时从新旧节点的两端开始比较，逐步向中间靠拢。")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("步骤")]),t._v("：")]),t._v(" "),s("ol",[s("li",[t._v("比较新旧节点的开始节点（头对头）。")]),t._v(" "),s("li",[t._v("比较新旧节点的结束节点（尾对尾）。")]),t._v(" "),s("li",[t._v("比较旧节点的开始节点和新节点的结束节点（头对尾）。")]),t._v(" "),s("li",[t._v("比较旧节点的结束节点和新节点的开始节点（尾对头）。")]),t._v(" "),s("li",[t._v("如果以上都不匹配，则尝试在旧节点中查找新节点。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("优点")]),t._v("：减少不必要的节点移动，提升性能。")])])]),t._v(" "),s("h4",{attrs:{id:"_4-静态节点优化"}},[t._v("（4）"),s("strong",[t._v("静态节点优化")])]),t._v(" "),s("p",[t._v("Vue 会标记静态节点（即不会变化的节点），在 diff 过程中直接跳过这些节点的比较。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("示例")]),t._v("："),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("This is a static node"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{ dynamicContent }}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),t._v("在这个例子中，第一个 "),s("code",[t._v("<p>")]),t._v(" 是静态节点，Vue 不会对它进行比较。")])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_3-vue-3-的优化"}},[t._v("3. "),s("strong",[t._v("Vue 3 的优化")])]),t._v(" "),s("p",[t._v("Vue 3 在 diff 算法上进一步优化，主要体现在以下几个方面：")]),t._v(" "),s("h4",{attrs:{id:"_1-patch-flag"}},[t._v("（1）"),s("strong",[t._v("Patch Flag")])]),t._v(" "),s("p",[t._v("Vue 3 引入了 "),s("code",[t._v("Patch Flag")]),t._v("，用于标记节点的动态部分。在 diff 过程中，Vue 3 可以跳过不需要更新的部分。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("示例")]),t._v("："),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Static content"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{ dynamicContent }}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),t._v("Vue 3 会为第二个 "),s("code",[t._v("<p>")]),t._v(" 标记一个 "),s("code",[t._v("Patch Flag")]),t._v("，表示只有 "),s("code",[t._v("dynamicContent")]),t._v(" 是动态的。")])]),t._v(" "),s("h4",{attrs:{id:"_2-block-tree"}},[t._v("（2）"),s("strong",[t._v("Block Tree")])]),t._v(" "),s("p",[t._v("Vue 3 引入了 "),s("code",[t._v("Block Tree")]),t._v(" 的概念，将模板划分为多个块（Block），每个块可以独立更新。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("优点")]),t._v("：减少了 diff 的范围，提升了性能。")])]),t._v(" "),s("h4",{attrs:{id:"_3-缓存事件处理函数"}},[t._v("（3）"),s("strong",[t._v("缓存事件处理函数")])]),t._v(" "),s("p",[t._v("Vue 3 会缓存事件处理函数，避免在每次渲染时重新创建函数。")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_4-diff-算法的局限性"}},[t._v("4. "),s("strong",[t._v("Diff 算法的局限性")])]),t._v(" "),s("p",[t._v("尽管 Vue 的 diff 算法非常高效，但在某些情况下仍然存在性能瓶颈：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("大规模列表更新")]),t._v("：如果列表项非常多，且顺序频繁变化，diff 算法的性能可能会下降。")]),t._v(" "),s("li",[s("strong",[t._v("跨层级移动节点")]),t._v("：由于 Vue 只进行同层比较，跨层级移动节点会导致节点销毁和重新创建。")])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_5-总结"}},[t._v("5. "),s("strong",[t._v("总结")])]),t._v(" "),s("p",[t._v("Vue 的 diff 算法通过同层比较、双端比较、静态节点优化等策略，实现了高效的 DOM 更新。Vue 3 进一步优化了 diff 算法，引入了 "),s("code",[t._v("Patch Flag")]),t._v(" 和 "),s("code",[t._v("Block Tree")]),t._v(" 等机制，提升了性能。理解 diff 算法的工作原理，可以帮助开发者编写更高效的 Vue 代码。")]),t._v(" "),s("h2",{attrs:{id:"vuex-的响应式处理主要"}},[t._v("Vuex 的响应式处理主要")]),t._v(" "),s("blockquote",[s("p",[t._v("Vuex 的响应式处理主要依赖于 Vue.js 自身的响应式系统，通过 Vue 的 "),s("code",[t._v("data")]),t._v(" 和 "),s("code",[t._v("computed")]),t._v(" 特性实现状态变化的自动追踪。以下是其核心实现原理和关键细节：")])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"一、核心原理"}},[t._v("一、核心原理")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("基于 Vue 的响应式系统")]),s("br"),t._v("\nVuex 的 "),s("code",[t._v("state")]),t._v(" 对象会被传入一个 Vue 实例的 "),s("code",[t._v("data")]),t._v(" 中，通过 Vue 的 "),s("code",[t._v("Object.defineProperty")]),t._v("（Vue 2）或 "),s("code",[t._v("Proxy")]),t._v("（Vue 3）实现数据劫持。当状态变化时，依赖该状态的组件会自动更新。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("Getter 的响应式")]),s("br"),t._v("\nGetter 本质上是 Vue 的 "),s("code",[t._v("computed")]),t._v(" 属性，其值会缓存并根据依赖的 "),s("code",[t._v("state")]),t._v(" 或 "),s("code",[t._v("其他 Getter")]),t._v(" 自动重新计算。")])])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"二、具体实现步骤"}},[t._v("二、具体实现步骤")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("初始化响应式 State")]),s("br"),t._v("\n在创建 Store 时，Vuex 会创建一个内部 Vue 实例，并将 "),s("code",[t._v("state")]),t._v(" 作为其 "),s("code",[t._v("data")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("store"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_vm "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("$$state")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" state "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// $$state 会被 Vue 转换为响应式")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("computed")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" getters "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Getter 转换为计算属性")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("模块化 State 处理")]),s("br"),t._v("\n对于嵌套模块，Vuex 会递归地将每个模块的 "),s("code",[t._v("state")]),t._v(" 挂载到根 "),s("code",[t._v("state")]),t._v(" 上，确保所有层级的 "),s("code",[t._v("state")]),t._v(" 均为响应式。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("Getter 的计算属性化")]),s("br"),t._v("\n每个 Getter 会被转换为 Vue 实例的 "),s("code",[t._v("computed")]),t._v(" 属性，依赖追踪由 Vue 自动完成：")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 示例：Getter 转换为 computed")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("computed")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doubleCount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$store"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])])])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"三、响应式限制与解决方案"}},[t._v("三、响应式限制与解决方案")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("动态添加属性")])])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("问题")]),t._v("：直接为对象添加新属性（如 "),s("code",[t._v("state.obj.newProp = 123")]),t._v("）不会触发响应式更新。")]),t._v(" "),s("li",[s("strong",[t._v("解决")]),t._v("：使用 "),s("code",[t._v("Vue.set()")]),t._v(" 或对象替换："),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("Vue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'newProp'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 或")]),t._v("\nstate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("newProp")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])])])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[s("strong",[t._v("数组操作")])])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("响应式方法")]),t._v("：使用数组变异方法（如 "),s("code",[t._v("push")]),t._v(", "),s("code",[t._v("pop")]),t._v(", "),s("code",[t._v("splice")]),t._v("）或 "),s("code",[t._v("Vue.set")]),t._v("。")]),t._v(" "),s("li",[s("strong",[t._v("非响应式操作")]),t._v("：直接通过索引修改值（如 "),s("code",[t._v("arr[0] = 1")]),t._v("）或修改 "),s("code",[t._v("length")]),t._v(" 属性。")])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"四、严格模式"}},[t._v("四、严格模式")]),t._v(" "),s("p",[t._v("在严格模式下（"),s("code",[t._v("strict: true")]),t._v("），Vuex 会通过 "),s("code",[t._v("watch")]),t._v(" 监听 "),s("code",[t._v("state")]),t._v(" 的变化。若发现非 "),s("code",[t._v("mutation")]),t._v(" 触发的修改，会抛出错误：")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" store "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vuex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Store")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("strict")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NODE_ENV")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'production'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("hr"),t._v(" "),s("h3",{attrs:{id:"五、vue-3-的优化"}},[t._v("五、Vue 3 的优化")]),t._v(" "),s("p",[t._v("在 Vue 3 中，Vuex 4 利用 "),s("code",[t._v("Proxy")]),t._v(" 替代 "),s("code",[t._v("Object.defineProperty")]),t._v("，解决了 Vue 2 中无法检测对象新增属性的问题，同时提升了性能。")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"总结-4"}},[t._v("总结")]),t._v(" "),s("p",[t._v("Vuex 的响应式通过 Vue 实例的 "),s("code",[t._v("data")]),t._v(" 和 "),s("code",[t._v("computed")]),t._v(" 实现，使用时需注意：")]),t._v(" "),s("ul",[s("li",[t._v("通过 "),s("code",[t._v("mutations")]),t._v(" 修改状态。")]),t._v(" "),s("li",[t._v("动态属性需使用 "),s("code",[t._v("Vue.set")]),t._v(" 或对象替换。")]),t._v(" "),s("li",[t._v("数组操作使用变异方法或 "),s("code",[t._v("Vue.set")]),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"vue中遍历全局的方法有哪些"}},[t._v("vue中遍历全局的方法有哪些")]),t._v(" "),s("h4",{attrs:{id:"_1-foreach"}},[t._v("1. "),s("code",[t._v("forEach()")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("操作")]),t._v(": 对数组的每个元素执行一次提供的函数。")]),t._v(" "),s("li",[s("strong",[t._v("返回值")]),t._v(": "),s("code",[t._v("undefined")]),t._v("。")])]),t._v(" "),s("h4",{attrs:{id:"_2-map"}},[t._v("2. "),s("code",[t._v("map()")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("操作")]),t._v(": 对数组的每个元素执行一次提供的函数，并返回一个新的数组。")]),t._v(" "),s("li",[s("strong",[t._v("返回值")]),t._v(": 一个新的数组，其中每个元素都是回调函数的结果。")])]),t._v(" "),s("h4",{attrs:{id:"_3-filter"}},[t._v("3. "),s("code",[t._v("filter()")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("操作")]),t._v(": 创建一个新数组，其中包含通过所提供函数实现的测试的所有元素。")]),t._v(" "),s("li",[s("strong",[t._v("返回值")]),t._v(": 一个新数组，包含通过测试的所有元素。")])]),t._v(" "),s("h4",{attrs:{id:"_4-findindex"}},[t._v("4. "),s("code",[t._v("findIndex()")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("操作")]),t._v(": 返回数组中满足提供的测试函数的第一个元素的索引。")]),t._v(" "),s("li",[s("strong",[t._v("返回值")]),t._v(": 数组中通过提供测试函数的第一个元素的索引，如果没有找到则返回 "),s("code",[t._v("-1")]),t._v("。")])]),t._v(" "),s("h4",{attrs:{id:"_5-some"}},[t._v("5. "),s("code",[t._v("some()")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("操作")]),t._v(": 测试数组中是否至少有一个元素通过了由提供的函数实现的测试。")]),t._v(" "),s("li",[s("strong",[t._v("返回值")]),t._v(": 如果至少有一个元素通过测试，则返回 "),s("code",[t._v("true")]),t._v("，否则返回 "),s("code",[t._v("false")]),t._v("。")])]),t._v(" "),s("h4",{attrs:{id:"_6-every"}},[t._v("6. "),s("code",[t._v("every()")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("操作")]),t._v(": 测试数组的所有元素是否都通过了由提供的函数实现的测试。")]),t._v(" "),s("li",[s("strong",[t._v("返回值")]),t._v(": 如果数组中的所有元素都通过了测试，则返回 "),s("code",[t._v("true")]),t._v("，否则返回 "),s("code",[t._v("false")]),t._v("。")])]),t._v(" "),s("hr"),t._v(" "),s("h4",{attrs:{id:"总结-5"}},[t._v("总结：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("forEach()")]),t._v(" 和 "),s("code",[t._v("map()")]),t._v(" 都会遍历数组的每个元素，但 "),s("code",[t._v("forEach()")]),t._v(" 没有返回值，"),s("code",[t._v("map()")]),t._v(" 会返回一个新数组。")]),t._v(" "),s("li",[s("code",[t._v("filter()")]),t._v(" 会返回一个新数组，包含通过测试的所有元素。")]),t._v(" "),s("li",[s("code",[t._v("findIndex()")]),t._v(" 会返回满足测试函数的第一个元素的索引，如果没有找到则返回 "),s("code",[t._v("-1")]),t._v("。")]),t._v(" "),s("li",[s("code",[t._v("some()")]),t._v(" 和 "),s("code",[t._v("every()")]),t._v(" 会根据测试函数的结果返回 "),s("code",[t._v("true")]),t._v(" 或 "),s("code",[t._v("false")]),t._v("。### 1. "),s("code",[t._v("forEach()")])]),t._v(" "),s("li",[s("strong",[t._v("操作")]),t._v(": 对数组的每个元素执行一次提供的函数。")]),t._v(" "),s("li",[s("strong",[t._v("返回值")]),t._v(": "),s("code",[t._v("undefined")]),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"_2-map-2"}},[t._v("2. "),s("code",[t._v("map()")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("操作")]),t._v(": 对数组的每个元素执行一次提供的函数，并返回一个新的数组。")]),t._v(" "),s("li",[s("strong",[t._v("返回值")]),t._v(": 一个新的数组，其中每个元素都是回调函数的结果。")])]),t._v(" "),s("h3",{attrs:{id:"_3-filter-2"}},[t._v("3. "),s("code",[t._v("filter()")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("操作")]),t._v(": 创建一个新数组，其中包含通过所提供函数实现的测试的所有元素。")]),t._v(" "),s("li",[s("strong",[t._v("返回值")]),t._v(": 一个新数组，包含通过测试的所有元素。")])]),t._v(" "),s("h3",{attrs:{id:"_4-findindex-2"}},[t._v("4. "),s("code",[t._v("findIndex()")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("操作")]),t._v(": 返回数组中满足提供的测试函数的第一个元素的索引。")]),t._v(" "),s("li",[s("strong",[t._v("返回值")]),t._v(": 数组中通过提供测试函数的第一个元素的索引，如果没有找到则返回 "),s("code",[t._v("-1")]),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"_5-some-2"}},[t._v("5. "),s("code",[t._v("some()")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("操作")]),t._v(": 测试数组中是否至少有一个元素通过了由提供的函数实现的测试。")]),t._v(" "),s("li",[s("strong",[t._v("返回值")]),t._v(": 如果至少有一个元素通过测试，则返回 "),s("code",[t._v("true")]),t._v("，否则返回 "),s("code",[t._v("false")]),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"_6-every-2"}},[t._v("6. "),s("code",[t._v("every()")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("操作")]),t._v(": 测试数组的所有元素是否都通过了由提供的函数实现的测试。")]),t._v(" "),s("li",[s("strong",[t._v("返回值")]),t._v(": 如果数组中的所有元素都通过了测试，则返回 "),s("code",[t._v("true")]),t._v("，否则返回 "),s("code",[t._v("false")]),t._v("。")])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"总结-6"}},[t._v("总结：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("forEach()")]),t._v(" 和 "),s("code",[t._v("map()")]),t._v(" 都会遍历数组的每个元素，但 "),s("code",[t._v("forEach()")]),t._v(" 没有返回值，"),s("code",[t._v("map()")]),t._v(" 会返回一个新数组。")]),t._v(" "),s("li",[s("code",[t._v("filter()")]),t._v(" 会返回一个新数组，包含通过测试的所有元素。")]),t._v(" "),s("li",[s("code",[t._v("findIndex()")]),t._v(" 会返回满足测试函数的第一个元素的索引，如果没有找到则返回 "),s("code",[t._v("-1")]),t._v("。")]),t._v(" "),s("li",[s("code",[t._v("some()")]),t._v(" 和 "),s("code",[t._v("every()")]),t._v(" 会根据测试函数的结果返回 "),s("code",[t._v("true")]),t._v(" 或 "),s("code",[t._v("false")]),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"封装一个可复用的组件-需要满足什么条件"}},[t._v("封装一个可复用的组件，需要满足什么条件")]),t._v(" "),s("p",[t._v("1.低耦合，组件之间的依赖越小越好\n2.最好从父级传入信息，不要在公共组件中请求数据\n3.传入的数据要进行校验\n4.处理事件的方法写在父组件中")]),t._v(" "),s("h3",{attrs:{id:"vue中如何做强制刷新"}},[t._v("vue中如何做强制刷新")]),t._v(" "),s("p",[t._v("1.location.reload()\n2.this.$router.go(0)\n3.provide和inject")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("import {getCurrentInstance} from 'vue';\nconst instance = getCurrentInstance();\ninstance.proxy.$forceUpdate();\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h3",{attrs:{id:"vue3和vue2有哪些区别"}},[t._v("vue3和vue2有哪些区别")]),t._v(" "),s("p",[t._v("1.双向数据绑定的原理不同\n2.是否支持碎片\n3.API不同\n4.定义数据变量方法不同\n5.生命周期的不同\n6.传值不同\n7.指令和插槽不同\n8.main.js不同")]),t._v(" "),s("h3",{attrs:{id:"vue的性能优化怎么做"}},[t._v("vue的性能优化怎么做")]),t._v(" "),s("p",[t._v("1.编码优化\n不要把所有数据都放在data中\nv-for时给每个元素绑定事件用事件代理\nkeep-alive缓存组件\n尽可能拆分组件，提高复用性、维护性\nkey值要保证唯一\n合理使用路由懒加载，异步组件\n数据持久化存储的使用尽量用防抖、节流优化")]),t._v(" "),s("p",[t._v("2.加载优化\n按需加载\n内容懒加载\n图片懒加载")]),t._v(" "),s("p",[t._v("3.用户体验\n骨架屏")]),t._v(" "),s("p",[t._v("4.SEO优化\n预渲染\n服务端渲染ssr")]),t._v(" "),s("p",[t._v("5.打包优化\nCDN形式加载第三方模块\n多线程打包\n抽离公共文件")]),t._v(" "),s("p",[t._v("6.缓存和压缩\n客户端缓存、服务端缓存\n服务端Gzip压缩")]),t._v(" "),s("h3",{attrs:{id:"首屏优化该如何去做"}},[t._v("首屏优化该如何去做")]),t._v(" "),s("p",[t._v("1.使用路由懒加载\n2.非首屏组件使用异步组件\n3.首屏不中要的组件延迟加载\n4.静态资源放在CDN上\n5.减少首屏上JS、CSS等资源文件的大小\n6.使用服务端渲染\n7.简历减少DOM的数量和层级\n8.使用精灵图请求\n9.做一些loading\n10.开启Gzip压缩\n11.图片懒加载")]),t._v(" "),s("h2",{attrs:{id:"vue-和-react-区别"}},[t._v("vue 和 react 区别")]),t._v(" "),s("h3",{attrs:{id:"相同点"}},[t._v("相同点")]),t._v(" "),s("ul",[s("li",[t._v("01.都支持组建化开发 和 Virtual DOM")]),t._v(" "),s("li",[t._v("02.都支持props进行父子组建间数据通讯")]),t._v(" "),s("li",[t._v("03.都支持数据驱动试图 不直接操作真实DOM 更新状态数据界面会自动更新.")]),t._v(" "),s("li",[t._v("04.都支持服务端渲染")]),t._v(" "),s("li",[t._v("05.都有支持native的方案, React使用React Native, Vue使用Week")])]),t._v(" "),s("h3",{attrs:{id:"不同点"}},[t._v("不同点")]),t._v(" "),s("ul",[s("li",[t._v("01.数据绑定: vue实现了数据的双向绑定, react数据流动是单向的")]),t._v(" "),s("li",[t._v("02.组建写法不一样, React推荐语法JSX, 也就是HTML和CSS全都写进JavaScript里, 即 All In js. Vue推荐的做法是(webpack +\nvue-loader)的单文件组建的格式, 即 html css js 写在同一个文件.")]),t._v(" "),s("li",[t._v("03.state对象在react应用中不可改变, 需用使用setState方法更新状态, 在vue中, state对象不是必须的, 数据由data熟悉在vue对象中管理")]),t._v(" "),s("li",[t._v("04.virtual Dom不一样, vue会跟踪每一个组建的依赖关系, 不需要重新渲染组建树. 而对于React而言, 每个应用的状态被改变时,\n全部组建都会重新渲染. 所以react中会需要shouldComponentUpdate这个声明周期函数方法来进行控制.")]),t._v(" "),s("li",[t._v("05.React严格上只针对MVC的view层. Vue则是MVVM模式")])]),t._v(" "),s("h2",{attrs:{id:"webpack-中-loader-和-plugin-的区别是什么"}},[t._v("webpack 中 loader 和 plugin 的区别是什么")]),t._v(" "),s("p",[t._v("loader：loader 是一个转换器，将 A 文件进行编译成 B 文件，属于单纯的文件转换过程")]),t._v(" "),s("p",[t._v("plugin：plugin 是一个扩展器，它丰富了 webpack 本身，针对是 loader 结束后，webpack 打包的整个过程，它并不直接操作文件，而是基于事件机制工作，会监听\nwebpack 打包过程中的某些节点，执行广泛的任务。")]),t._v(" "),s("h2",{attrs:{id:"vue-封装通用组件"}},[t._v("vue 封装通用组件")]),t._v(" "),s("p",[t._v("通用组件必须具备高性能、低耦合的特性")]),t._v(" "),s("p",[s("strong",[t._v("1、数据从父组件传入")])]),t._v(" "),s("ul",[s("li",[t._v("a.为了解耦，子组件本身就不能生成数据。即使生成了，也只能在组件内部运作，不能传递出去。")]),t._v(" "),s("li",[t._v("b.但是通用组件的的应用场景比较复杂，对 props 传递的参数应该添加一些验证规则")]),t._v(" "),s("li",[t._v("c.props 中数据不要更改。")])]),t._v(" "),s("p",[s("strong",[t._v("2.在父组件处理事件")])]),t._v(" "),s("ul",[s("li",[t._v("a.在通用组件中，通常会需要有各种事件， 比如复选框的 change 事件，或者组件中某个按钮的 click 事件\n这些事件的处理方法应当尽量放到父组件中，通用组件本身只作为一个中转,\n这样既降低了耦合性，也保证了通用组件中的数据不被污染")]),t._v(" "),s("li",[t._v("b. 不过，并不是所有的事件都放到父组件处理 比如组件内部的一些交互行为，或者处理的数据只在组件内部传递，这时候就不需要用 $\nemit 了")])]),t._v(" "),s("p",[s("strong",[t._v("3. 合理使用 slot")]),t._v("\n一般在不同场景显示不同组件。")]),t._v(" "),s("p",[s("strong",[t._v("4.尽量不要依赖 vuex")])]),t._v(" "),s("p",[t._v("Vue 没有直接子对子传参的方法，建议将需要传递数据的子组件，都合并为一个组件。如果一定需要子对子传参，可以先从传到父组件，再传到子组件。\n或者使用 pubSub.js 实现子组件之间互相传参数。")]),t._v(" "),s("p",[s("strong",[t._v("5.动态组件")]),t._v("\nVue 还可以将多个子组件，都挂载在同一个位置，通过变量来切换组件，实现 tab 菜单这样的效果")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("component v"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("bind"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("is"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tabView'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("component"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("6.递归组件")]),t._v("\n当组件拥有 name 属性的时候，就可以在它的模板内递归的调用自己，这在开发树形组件的时候十分有效")]),t._v(" "),s("h2",{attrs:{id:"vue-数据双向绑定原理"}},[t._v("vue 数据双向绑定原理")]),t._v(" "),s("p",[t._v("双向绑定是指数据模型（Module）和 视图（View）之间的双向绑定。 其原理是采用数据劫持结合发布订阅者模式实现。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("1). 创建 vue 实例的过程中， 会先遍历 data 选项中所有的属性（发布者）， 用 Object.defineProperty 劫持这些属性将其转换为\ngetter/setter。读取数据时候会触发 getter， 修改数据会触发 setter。")]),t._v(" "),s("p",[t._v("代码：")]),t._v(" "),s("ul",[s("li",[t._v("1).initData 初始化用户传入的数据")]),t._v(" "),s("li",[t._v("2). new Observer 将数据进行观测。")]),t._v(" "),s("li",[t._v("3). this.walk 进行对象的处理。")]),t._v(" "),s("li",[t._v("4). defineReactive 循环对象属性定义响应式变化。")]),t._v(" "),s("li",[t._v("5). Object.defineProperty 使用 Object.defineProperty 重新定义数据。 拦截属性的获取--进行依赖收集。 拦截属性的更新操作，\n对相关依赖进行通知。")])])]),t._v(" "),s("li",[s("p",[t._v("2). 然后给每个对象属性对应的 new Dep(), Dep 专门收集依赖、删除依赖、向依赖发送消息。 dep 实际就是一个普通对象， 里边只有两个属性\nid,subs。 subs 存放 watcher 数组。\n先把每个依赖设置在 Dep.target 上。 在 Dep 中创建一个依赖数组， 先判断 Dep.target 是否已经在依赖数组中存在，\n如果不存在就添加到依赖数组中完成依赖收集。 随后 Dep.target 置为 null。")])]),t._v(" "),s("li",[s("p",[t._v("3). 组件在挂载过程中都会 new 一个 Watcher 实例。 这个实例就是依赖（订阅者）。 Watcher 的第二个参数是一个函数，\n此函数的作用是更新渲染节点。 在首次渲染过程， 会自动调用 Dep 方法收集依赖，\n收集完成后组件中每个数据都绑定上依赖。 当数据变化时就会在 setter 中调用 dep.notify 通知对应的依赖进行更新。 在更新过程中要读取数据，\n就会触发 Watcher 的第二个函数参数。 一触发就再次自动调用 Dep 方法收集依赖，\n同时在此函数中运行 patch（diff 运算）来更新对应的 DOM 节点， 完成了数据的双向绑定。")])])]),t._v(" "),s("h2",{attrs:{id:"mixin-合并规则"}},[t._v("mixin 合并规则")]),t._v(" "),s("h3",{attrs:{id:"选项合并规则"}},[t._v("选项合并规则")]),t._v(" "),s("p",[t._v("1.数据对象（data）在内部会进行递归合并，并在发生冲突时以组件数据优先")]),t._v(" "),s("p",[t._v("2.同名钩子函数将合并为一个数组，因此都将被调用。另外，混入对象的钩子将在组件自身钩子之前调用")]),t._v(" "),s("p",[t._v("3.值为对象的选项，例如 methods、components、watch 和\ndirectives，将被合并为同一个对象。两个对象键名冲突时，取组件对象的键值对。Vue.extend() 也使用同样的策略进行合并")]),t._v(" "),s("h2",{attrs:{id:"elementui-按需加载原理"}},[t._v("elementUI 按需加载原理")]),t._v(" "),s("p",[t._v("。。。")]),t._v(" "),s("h2",{attrs:{id:"图片懒加载原理"}},[t._v("图片懒加载原理")]),t._v(" "),s("p",[t._v("图片懒加载考虑哪些问题，实现的大概逻辑")]),t._v(" "),s("h2",{attrs:{id:"统计页面停留时长"}},[t._v("统计页面停留时长")]),t._v(" "),s("p",[t._v("统计用户访问时长，如何优雅地发送统计数据到服务端（提示： 提出在路由钩子实现， 提到节流和防抖， 回答节流和防抖的原理）")]),t._v(" "),s("h2",{attrs:{id:"keep-alive-原理-2"}},[t._v("keep alive 原理")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1605603",target:"_blank",rel:"noopener noreferrer"}},[t._v("keep alive 原理"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"vue-template-模板到解析层真实-dom-的过程"}},[t._v("vue template 模板到解析层真实 DOM 的过程")]),t._v(" "),s("h2",{attrs:{id:"v-model-手动实现"}},[t._v("v-model 手动实现")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://segmentfault.com/a/1190000012264050",target:"_blank",rel:"noopener noreferrer"}},[t._v("v-model 手动实现"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"nexttick-原理"}},[t._v("$nextTick 原理")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://ustbhuangyi.github.io/vue-analysis/v2/reactive/next-tick.html#js-%E8%BF%90%E8%A1%8C%E6%9C%BA%E5%88%B6",target:"_blank",rel:"noopener noreferrer"}},[t._v("nextTick 原理 黄奕"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://bbs.huaweicloud.com/blogs/235688",target:"_blank",rel:"noopener noreferrer"}},[t._v("nextTick 原理 华为云"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"vuex-原理"}},[t._v("vuex 原理")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://segmentfault.com/a/1190000018251844",target:"_blank",rel:"noopener noreferrer"}},[t._v("vuex 原理"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"vue-router-原理"}},[t._v("vue router 原理")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.cn/post/6844903612930326541",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue Router"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"v-if-和-v-show-区别"}},[t._v("v-if 和 v-show 区别")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("相同点 两者都是在判断 DOM 节点是否要显示。")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("不同点\n1、实现方式")]),t._v(" "),s("p",[t._v("v-if 是根据后面数据的真假值判断直接从 Dom 树上删除或重建元素节点")]),t._v(" "),s("p",[t._v("v-show 只是在修改元素的 css 样式，也就是 display 的属性值，元素始终在 Dom 树上。")]),t._v(" "),s("p",[t._v("2、编译过程")]),t._v(" "),s("p",[t._v("v-if 切换有一个局部编译/卸载的过程，切换过程中会销毁和重建内部的事件监听和子组件")]),t._v(" "),s("p",[t._v("v-show 只是简单的基于 css 切换")]),t._v(" "),s("p",[t._v("3、编译条件")]),t._v(" "),s("p",[t._v("v-if 是惰性的，如果初始条件为假，则什么也不做只有在条件第一次变为真时才开始局部编译")]),t._v(" "),s("p",[t._v("v-show 是在任何条件下（首次条件是否为真）都被编译，然后被缓存，而且 DOM 元素始终被保留")]),t._v(" "),s("p",[t._v("4、性能消耗")]),t._v(" "),s("p",[t._v("v-if 有更高的切换消耗，不适合做频繁的切换")]),t._v(" "),s("p",[t._v("v-show 有更高的初始渲染消耗，适合做频繁的额切换")])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("v-if 是真正的条件渲染，因为它会确保在切换过程中条件块内的事件监听器和子组件适当地被销毁和重建\n也是惰性的：如果在初始渲染时条件为假，则什么也不做——直到条件第一次变为真时，才会开始渲染条件块。")]),t._v(" "),s("p",[t._v("v-show 就简单得多——不管初始条件是什么，元素总是会被渲染，并且只是简单地基于 CSS 的 “display” 属性进行切换。 所以，v-if\n适用于在运行时很少改变条件，不需要频繁切换条件的场景 v-show\n则适用于需要非常频繁切换条件的场景")])]),t._v(" "),s("h2",{attrs:{id:"vue-开发插件流程"}},[t._v("vue 开发插件流程")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://segmentfault.com/a/1190000010813937",target:"_blank",rel:"noopener noreferrer"}},[t._v("vue 自定义插件"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"computed-与-watch-区别"}},[t._v("computed 与 watch 区别")]),t._v(" "),s("p",[t._v("watch 和 computed 区别:")]),t._v(" "),s("p",[t._v("1.computed 是监听属性 依赖属性值发生变化的时候 数据才会变化. watch 是监听数据变化 执行相应的操作.\n2.computed 有缓存 当依赖的属性没有发生变化的时候 则取缓存中的数据. watch 监听值是否发生变化, 都会调用回调函数.\n3.computed 必须有 return watch 不需要\n4.computed 不能有异步 watch 可以")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("功能上：computed 是计算属性，也就是依赖其它的属性计算所得出最后的值。watch 是去监听一个值的变化，然后执行相对应的函数")]),t._v(" "),s("p",[t._v("使用上：computed 中的函数必须要用 return 返回 watch 的回调里面会传入监听属性的新旧值，通过这两个值可以做一些特定的操作，不是必须要用\nreturn")]),t._v(" "),s("p",[t._v("性能上：computed 中的函数所依赖的属性没有发生变化，那么调用当前的函数的时候会从缓存中读取，而 watch 在每次监听的值发生变化的时候都会执行回调")]),t._v(" "),s("p",[t._v("场景上：computed：当一个属性受多个属性影响的时候，例子：购物车商品结算 watch：当一条数据影响多条数据的时候，例子：搜索框")])]),t._v(" "),s("h2",{attrs:{id:"分片下载与上传文件-如何实现"}},[t._v("分片下载与上传文件 如何实现")]),t._v(" "),s("h2",{attrs:{id:"vue-diff-算法"}},[t._v("vue diff 算法")]),t._v(" "),s("h2",{attrs:{id:"vue-模板编译过程"}},[t._v("vue 模板编译过程")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://segmentfault.com/a/1190000012922342",target:"_blank",rel:"noopener noreferrer"}},[t._v("vue 模板编译过程"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"vue-组建-name-属性的作用"}},[t._v("vue 组建 name 属性的作用")]),t._v(" "),s("p",[t._v("项目使用 keep-alive 时，可以搭配组件的 name 属性进行过滤\nDOM 做递归组件时需要调用自身 name\nvue-devtools 调试工具里显示的组见名称是由 vue 中组件 name 决定的")]),t._v(" "),s("h2",{attrs:{id:"keep-alive-原理-loader-loader-是一个转换器-将-a-文件进行编译成-b-文件-属于单纯的文件转换过程"}},[t._v("keep-alive 原理 loader：loader 是一个转换器，将 A 文件进行编译成 B 文件，属于单纯的文件转换过程；")]),t._v(" "),s("p",[t._v("plugin：plugin 是一个扩展器，它丰富了 webpack 本身，针对是 loader 结束后，webpack 打包的整个过程，它并不直接操作文件，而是基于事件机制工作，会监听\nwebpack 打包过程中的某些节点，执行广泛的任务。\nkeep-alive 是 Vue 内置的一个组件，可以使被包含的组件保留状态，避免重新渲染\n一般结合路由和动态组件一起使用，用于缓存组件\n提供 include 和 exclude 属性，两者都支持字符串或正则表达式， include 表示只有名称匹配的组件会被缓存，exclude\n表示任何名称匹配的组件都不会被缓存 ，其中 exclude 的优先级比 include 高\n对应两个钩子函数 activated 和 deactivated ，当组件被激活时，触发钩子函数 activated，当组件被移除时，触发钩子函数 deactivated")]),t._v(" "),s("h2",{attrs:{id:"vue-父子组建传递参数-8-种方式"}},[t._v("vue 父子组建传递参数 8 种方式")]),t._v(" "),s("blockquote",[s("p",[t._v("参考地址： https://juejin.cn/post/6844904080540712967")])]),t._v(" "),s("h2",{attrs:{id:"组建化-和-mvvm"}},[t._v("组建化 和 MVVM")]),t._v(" "),s("blockquote",[s("p",[t._v("1.1 组件：把重复的代码提取出来合并成为一个个组件，组件最重要的就是重用（复用），位于框架最底层，其他功能都依赖于组件，可供不同功能使用，独立性强。")])]),t._v(" "),s("blockquote",[s("p",[t._v("1.2")])]),t._v(" "),s("p",[t._v("模块：分属同一功能/业务的代码进行隔离（分装）成独立的模块，可以独立运行，以页面、功能或其他不同粒度划分程度不同的模块，位于业务框架层，模块间通过接口调用，目的是降低模块间的耦合，由之前的主应用与模块耦合，变为主应用与接口耦合，接口与模块耦合。")]),t._v(" "),s("h3",{attrs:{id:"eg"}},[t._v("eg:")]),t._v(" "),s("blockquote",[s("p",[t._v("2.1 组件：就像一个个小的单位，多个组件可以组合成组件库，方便调用和复用，组件间也可以嵌套，小组件组合成大组件。\n2.2 模块：就像是独立的功能和项目（如淘宝：注册、登录、购物、直播...），可以调用组件来组成模块，多个模块可以组合成业务框架。")])]),t._v(" "),s("h2",{attrs:{id:"响应式原理"}},[t._v("响应式原理")]),t._v(" "),s("h2",{attrs:{id:"vdom-和-diff"}},[t._v("vdom 和 diff")]),t._v(" "),s("h2",{attrs:{id:"模板编译"}},[t._v("模板编译")]),t._v(" "),s("h2",{attrs:{id:"组建渲染过程"}},[t._v("组建渲染过程")]),t._v(" "),s("h2",{attrs:{id:"前端路由"}},[t._v("前端路由")]),t._v(" "),s("h2",{attrs:{id:"object-defineproperty-和-proxy-对比的缺点"}},[t._v("Object.defineProperty 和 Proxy 对比的缺点")]),t._v(" "),s("p",[t._v(":::tips 01.深度监听需要递归 02.无法监听新增属性与删除属性(Vue.$set Vue.$delete) 03.无法原生监听数组 需要特殊处理\n:::")]),t._v(" "),s("blockquote",[s("p",[t._v("Proxy 基本应用")])]),t._v(" "),s("p",[t._v(":::tips")]),t._v(" "),s("p",[t._v(":::")]),t._v(" "),s("blockquote",[s("p",[t._v("Reflect")])])])}),[],!1,null,null,null);s.default=e.exports}}]);
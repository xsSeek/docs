(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{374:function(t,e,s){"use strict";s.r(e);var n=s(3),a=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"浏览器"}},[t._v("浏览器")]),t._v(" "),e("h2",{attrs:{id:"浏览器原生能力-在新页面触发事件-执行父页面中的方法"}},[t._v("浏览器原生能力 在新页面触发事件 执行父页面中的方法")]),t._v(" "),e("h3",{attrs:{id:"在父组建注册"}},[t._v("在父组建注册")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// open('https://xxx').opener 指向window 上面会有updateFun 方法")]),t._v("\nwindow"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://xxx'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("opener"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("updateList")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("flag")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flag"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\n\n")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("js\n  window"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("opener"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateList")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'inventory-create'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("h2",{attrs:{id:"浏览器缓存机制"}},[t._v("浏览器缓存机制")]),t._v(" "),e("blockquote",[e("p",[t._v("浏览器缓存机制是一种优化网页加载速度的技术，通过将资源存储在本地，减少重复请求，提升用户体验。以下是其核心要点：")])]),t._v(" "),e("h3",{attrs:{id:"_1-缓存类型"}},[t._v("1. "),e("strong",[t._v("缓存类型")])]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("强缓存")]),t._v("：浏览器直接从本地缓存读取资源，不发送请求到服务器。")]),t._v(" "),e("ul",[e("li",[t._v("相关头字段：\n"),e("ul",[e("li",[e("code",[t._v("Expires")]),t._v("：指定资源的过期时间（HTTP/1.0）。")]),t._v(" "),e("li",[e("code",[t._v("Cache-Control")]),t._v("：更灵活的缓存控制（HTTP/1.1），常见值：\n"),e("ul",[e("li",[e("code",[t._v("max-age")]),t._v("：资源有效期（秒）。")]),t._v(" "),e("li",[e("code",[t._v("no-cache")]),t._v("：需验证资源是否过期。")]),t._v(" "),e("li",[e("code",[t._v("no-store")]),t._v("：禁止缓存。")]),t._v(" "),e("li",[e("code",[t._v("public")]),t._v("：允许所有用户缓存。")]),t._v(" "),e("li",[e("code",[t._v("private")]),t._v("：仅允许单个用户缓存。")])])])])])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("协商缓存")]),t._v("：当强缓存失效时，浏览器向服务器验证资源是否更新。")]),t._v(" "),e("ul",[e("li",[t._v("相关头字段：\n"),e("ul",[e("li",[e("code",[t._v("Last-Modified")]),t._v(" / "),e("code",[t._v("If-Modified-Since")]),t._v("：基于资源修改时间。")]),t._v(" "),e("li",[e("code",[t._v("ETag")]),t._v(" / "),e("code",[t._v("If-None-Match")]),t._v("：基于资源唯一标识。")]),t._v(" "),e("li",[t._v("HTTP1.0:请求头：if-modified-since 响应头：last-modified")]),t._v(" "),e("li",[t._v("HTTP1.1:请求头：if-none-match 响应头：Etag")])])])])])]),t._v(" "),e("h3",{attrs:{id:"_2-缓存流程"}},[t._v("2. "),e("strong",[t._v("缓存流程")])]),t._v(" "),e("ol",[e("li",[t._v("浏览器请求资源时，先检查强缓存。")]),t._v(" "),e("li",[t._v("若强缓存有效，直接使用缓存资源。")]),t._v(" "),e("li",[t._v("若强缓存失效，浏览器向服务器发送请求，验证协商缓存。")]),t._v(" "),e("li",[t._v("若资源未更新（304状态码），继续使用缓存；若已更新（200状态码），返回新资源并更新缓存。")])]),t._v(" "),e("h3",{attrs:{id:"_3-缓存位置"}},[t._v("3. "),e("strong",[t._v("缓存位置")])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Memory Cache")]),t._v("：内存缓存，速度快但容量小，页面关闭后失效。")]),t._v(" "),e("li",[e("strong",[t._v("Disk Cache")]),t._v("：磁盘缓存，速度较慢但容量大，持久存储。")])]),t._v(" "),e("h3",{attrs:{id:"_4-缓存策略"}},[t._v("4. "),e("strong",[t._v("缓存策略")])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("HTML文件")]),t._v("：通常不缓存或设置较短缓存时间，确保用户获取最新内容。")]),t._v(" "),e("li",[e("strong",[t._v("静态资源")]),t._v("（如CSS、JS、图片）：设置较长缓存时间，通过文件名哈希或版本号控制更新。")])]),t._v(" "),e("h3",{attrs:{id:"_5-缓存优点"}},[t._v("5. "),e("strong",[t._v("缓存优点")])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("减少请求")]),t._v("：降低服务器负载。")]),t._v(" "),e("li",[e("strong",[t._v("加快加载")]),t._v("：提升用户体验。")]),t._v(" "),e("li",[e("strong",[t._v("节省带宽")]),t._v("：减少重复下载。")])]),t._v(" "),e("h3",{attrs:{id:"_6-缓存缺点"}},[t._v("6. "),e("strong",[t._v("缓存缺点")])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("资源更新延迟")]),t._v("：可能导致用户看到旧内容。")]),t._v(" "),e("li",[e("strong",[t._v("缓存管理复杂")]),t._v("：需合理设置缓存策略。")])]),t._v(" "),e("h3",{attrs:{id:"_7-缓存控制"}},[t._v("7. "),e("strong",[t._v("缓存控制")])]),t._v(" "),e("ul",[e("li",[t._v("通过HTTP头字段（如"),e("code",[t._v("Cache-Control")]),t._v("、"),e("code",[t._v("Expires")]),t._v("）或HTML的"),e("code",[t._v("<meta>")]),t._v("标签控制缓存行为。")])]),t._v(" "),e("h3",{attrs:{id:"总结"}},[t._v("总结")]),t._v(" "),e("p",[t._v("浏览器缓存机制通过存储资源减少重复请求，提升性能，但需合理设置缓存策略以平衡性能和资源更新。")]),t._v(" "),e("h2",{attrs:{id:"v8垃圾回收机制"}},[t._v("V8垃圾回收机制")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://segmentfault.com/a/1190000025129635",target:"_blank",rel:"noopener noreferrer"}},[t._v("V8垃圾回收机制"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"浏览器缓存机制-2"}},[t._v("浏览器缓存机制")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.cnblogs.com/suihang/p/12855345.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("缓存机制"),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://www.jianshu.com/p/54cc04190252",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器缓存机制"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"什么是盒子模型"}},[t._v("什么是盒子模型")]),t._v(" "),e("p",[t._v("在网页中，一个元素占有空间的大小由几个部分构成，其中包括元素的内容（content），元素的内边距（padding），元素的边框（border），元素的外边距（margin）四个部分。这四个部分占有的空间中，有的部分可以显示相应的内容，而有的部分只用来分隔相邻的区域或区域。4个部分一起构成了css中元素的盒模型")]),t._v(" "),e("h2",{attrs:{id:"简述一下src与href的区别"}},[t._v("简述一下src与href的区别")]),t._v(" "),e("p",[t._v("href 是指向网络资源所在位置，建立和当前元素（锚点）或当前文档（链接）之间的链接，用于超链接。")]),t._v(" "),e("p",[t._v("src是指向外部资源的位置，指向的内容将会嵌入到文档中当前标签所在位置；在请求src资源时会将其指向的资源下载并应用到文档内，例如js脚本，img图片和frame等元素。当浏览器解析到该元素时，会暂停其他资源的下载和处理，直到将该资源加载、编译、执行完毕，图片和框架等元素也如此，类似于将所指向资源嵌入当前标签内。这也是为什么将js脚本放在底部而不是头部。")]),t._v(" "),e("h2",{attrs:{id:"cookie、localstorage、sessionstorage区别"}},[t._v("cookie、localStorage、sessionStorage区别")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("特性")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("cookie")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("localStorage")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("sessionStorage")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("由谁初始化")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("客户端或服务器，服务器可以使用Set-Cookie请求头。")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("客户端")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("客户端")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("数据的生命周期")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("一般由服务器生成，可设置失效时间，如果在浏览器生成，默认是关闭浏览器之后失效")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("永久有效，可以被清除")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("关闭浏览器失效")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("存放数据大小")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("4KB")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("5M")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("5M")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("与服务器通信")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("每次都会携带在HTTP头中，如果使用cookie保存过多数据会带来性能问题")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("仅在客户端保存")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("仅在客户端保存")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("与服务器通信")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("一般由服务器生成，用于标识用户身份")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("用于浏览器缓存数据")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("用于浏览器缓存数据")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("访问权限")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("任意窗口")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("任意窗口")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("当前页面窗口")])])])]),t._v(" "),e("h2",{attrs:{id:"浏览器从输入url到页面渲染的过程"}},[t._v("浏览器从输入URL到页面渲染的过程")]),t._v(" "),e("p",[t._v("https://juejin.cn/post/6984339284534755358\nDNS解析\n建立TCP连接\n发送 HTTP / HTTPS 请求（建立 TLS 连接）\n服务器响应请求\n渲染页面")]),t._v(" "),e("ul",[e("li",[t._v("浏览器会获取HTML和CSS的资源，然后把HTML解析成DOM树")]),t._v(" "),e("li",[t._v("再把CSS解析成CSSOM")]),t._v(" "),e("li",[t._v("把DOM和CSSOM合并为渲染树")]),t._v(" "),e("li",[t._v("布局")]),t._v(" "),e("li",[t._v("把渲染树的每个节点渲染到屏幕上（绘制）\n断开TCP连接")])]),t._v(" "),e("h3",{attrs:{id:"token存在sessionstorage还是loaclssorage"}},[t._v("token存在sessionStorage还是loaclsSorage")]),t._v(" "),e("p",[t._v("token：验证身份的令牌，一般就是用户通过账号密码登录后，服务端把这些凭证通过加密等一系列操作后得到的字符串\n1.存localStorage里，后期每次请求接口都需要把它当作一个字段传给后台\n2.存cookie中，会自动发送，缺点就是不能跨域\n如果存在localstorage中，容易被XSS攻击，但是如果做好了对应的措施，那么是利大于弊\n如果存在cookie中会有CSRF攻击")]),t._v(" "),e("h3",{attrs:{id:"dom树和渲染树有什么区别"}},[t._v("DOM树和渲染树有什么区别？")]),t._v(" "),e("p",[t._v("DOM树是和HTML标签一一对应的，包括head和隐藏元素\n渲染树是不包含head和隐藏元素")]),t._v(" "),e("h3",{attrs:{id:"精灵图和base64的区别是什么"}},[t._v("精灵图和base64的区别是什么？")]),t._v(" "),e("p",[t._v("精灵图：把多张小图整合到一张大图上，利用定位的一些属性把小图显示在页面上，当访问页面可以减少请求，提高加载速度\nbase64：传输8Bit字节代码的编码方式，把原本二进制形式转为64个字符的单位，最后组成字符串\nbase64是会和html css一起下载到浏览器中，减少请求，减少跨域问题，但是一些低版本不支持，若base64体积比原图片大，不利于css的加载。")]),t._v(" "),e("h3",{attrs:{id:"svg格式了解多少"}},[t._v("svg格式了解多少？")]),t._v(" "),e("p",[t._v("基于XML语法格式的图像格式，可缩放矢量图，其他图像是基于像素的，SVG是属于对图像形状的描述，本质是文本文件，体积小，并且不管放大多少倍都不会失真\n1.SVG可直接插入页面中，成为DOM一部分，然后用JS或CSS进行操作\n"),e("svg"),t._v("\n2.SVG可作为文件被引入\n"),e("img",{attrs:{src:"pic.svg"}}),t._v("\n3.SVG可以转为base64引入页面")]),t._v(" "),e("h3",{attrs:{id:"了解过jwt吗"}},[t._v("了解过JWT吗？")]),t._v(" "),e("p",[t._v("JSON Web Token 通过JSON形式作为在web应用中的令牌，可以在各方之间安全的把信息作为JSON对象传输\n信息传输、授权\nJWT的认证流程\n1.前端把账号密码发送给后端的接口\n2.后端核对账号密码成功后，把用户id等其他信息作为JWT 负载，把它和头部分别进行base64编码拼接后签名，形成一个JWT（token）。\n3.前端每日请求时都会把JWT放在HTTP请求头的Authorization字段内\n4.后端检查是否存在，如果存在就验证JWT的有效性（签名是否正确，token是否过期）\n5.验证通过后后端使用JWT中包含的用户信息进行其他的操作，并返回对应结果\n简洁、包含性、因为Token是JSON加密的形式保存在客户端，所以JWT是跨语言的，原则上是任何web形式都支持。")]),t._v(" "),e("h3",{attrs:{id:"http协议规定的协议头和请求头有什么"}},[t._v("HTTP协议规定的协议头和请求头有什么？")]),t._v(" "),e("p",[t._v("1.请求头信息：\nAccept:浏览器告诉服务器所支持的数据类型\nHost:浏览器告诉服务器我想访问服务器的哪台主机\nReferer:浏览器告诉服务器我是从哪里来的（防盗链）\nUser-Agent:浏览器类型、版本信息\nDate:浏览器告诉服务器我是什么时候访问的\nConnection:连接方式\nCookie\nX-Request-With:请求方式\n2.响应头信息：\nLocation:这个就是告诉浏览器你要去找谁\nServer:告诉浏览器服务器的类型\nContent-Type:告诉浏览器返回的数据类型\nRefresh:控制了的定时刷新")])])}),[],!1,null,null,null);e.default=a.exports}}]);